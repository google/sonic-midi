#!/usr/bin/env ruby

# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'commander/import'
require 'melody_to_mid'
require 'rubygems'
require 'sonic_pi'

def local_path(filename)
  return File.join(File.dirname(File.expand_path(__FILE__)), '../lib', filename)
end

def check_input(args)
    if args.length < 1
      raise 'Missing input file'
    end
    
    input = args[0]
    if not File.file?(input)
      raise 'File %s doesn''t exist' % input
    end

    return input
end

def play_music(input)
  melody = File.read(input)
  shared_functions = File.read(local_path('shared_functions.rb'))
  sonic_play = File.read(local_path('sonic_play.rb'))
  sonic_pi_command = melody + "\n" + shared_functions + "\n" + sonic_play + "\nsonic_play()"
  app = SonicPi.new
  app.test_connection!
  app.run(sonic_pi_command)
end

def convert_music(input)
  output = input + '.mid'
  melody_converter = MelodyToMidi.new
  melody_converter.make_midi(input, output)
  puts 'Saved midi as %s' % output
end

program :name, 'sonic_midi'
program :version, '0.1.0'
program :description, 'Sends music to Sonic Pi and convert it to Midi'

command :sonic do |c|
  c.syntax = 'sonic_midi sonic <filename>'
  c.summary = 'Send music to SonicPi'
  c.description = 'Send music specified in <filename> to SonicPi'
  c.example 'description', 'sonic_midi sonic melody.rb'
  c.action do |args, options|
    input = check_input(args)
    play_music(input)
  end
end

command :midi do |c|
  c.syntax = 'sonic_midi midi <filename>'
  c.summary = 'Converts music to Midi'
  c.description = 'Converts music specified in <filename> to Midi and saves as <filename>.mid'
  c.example 'description', 'sonic_midi midi melody.rb'
  c.action do |args, options|
    input = check_input(args)
    convert_music(input)
  end
end

command :all do |c|
  c.syntax = 'sonic_midi all <filename>'
  c.summary = 'Sends music to SonicPi and converts it to Midi'
  c.description = 'Sends music specified in <filename> to SonicPi and converts it to Midi, saving as <filename>.mid'
  c.example 'description', 'sonic_midi all melody.rb'
  c.action do |args, options|
    input = check_input(args)
    play_music(input)
    convert_music(input)
  end
end
